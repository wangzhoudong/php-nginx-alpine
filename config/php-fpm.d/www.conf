[www]
user = devops
group = devops
listen = 9000

; 高并发场景必须把这个值设大， 默认为-1（由系统决定） 同时受整操作系统（sysctl），nginx 配置
; 操作系统以CentOS为例，可通过默认配置 /etc/sysctl.conf 文件进行调整 比如：
;     net.core.somaxconn = 1048576 # 默认为128
;     net.core.netdev_max_backlog = 1048576 # 默认为1000
;     net.ipv4.tcp_max_syn_backlog = 1048576 # 默认为1024
;  WEB前端以Nginx为例，可通过默认配置 /etc/nginx/nginx.conf 文件中的监听选项来调整。比如：
;      listen  80 backlog=5000; # 默认为511

listen.backlog = 10240

; php-fpm 进程数 管理方式 （ondemand static dynamic）
; 如果是8G内存或以上 建议使用static 如果小于建议用8G 建议使用 dynamic 或者 ondemand
; static，始终保持一个固定数量的子进程，这个数由pm.max_children定义
; dynamic，他是这样的，启动时，会产生固定数量的子进程（由pm.start_servers控制）分别是pm.min_spare_servers和pm.max_spare_servers 超出了pm.max_spare_servers，则会被杀掉
; ondemand 这种模式和 dynamic相反，(启动时不创建子进程，有需求才创建)，在持续闲置了pm.process_idle_timeout秒后就会被杀掉

pm = dynamic

; 静态方式 （static） 下开启的php-fpm进程数量 建议公式 64*（空闲内存） 如1G  64  2G 128(如果pm为dynamic,该参数会失效）

pm.max_children = 256
; 动态方式下的起始php-fpm进程数量
pm.start_servers = 2
;  动态方式下的最小php-fpm进程数量
pm.min_spare_servers = 2
;   动态方式下的最大php-fpm进程数量 建议公式 64*（空闲内存） 如1G  64  2G 128
pm.max_spare_servers = 250
; php-fpm工作进程处理完多少请求后自动重启, 目的就是为了控制请求处理过程中的内存溢出,使得内存占用在一个可接受的范围内
pm.max_requests = 1000
; FPM 状态页面的网址 可以监控 php-fpm 的状态
; nginx 配置
; 在 nginx 的配置文件中添加以下配置。
; server {
;     ......
;     # 在 server 中添加以下配置
;     location = ~^/fpm-status$  {
; 	      include fastcgi_params;
; 	      fastcgi_pass 127.0.0.1:9000;
; 	      fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
;     }
;     .....
; }

pm.status_path = /fpm-status
; 设置单个请求的超时中止时间.. 设置为 '0' 表示 'Off'.当经常出现502错误时可以尝试更改此选项。
request_terminate_timeout = 30
; 最大打开句柄数，默认为系统值。
rlimit_files = 65535

; request_slowlog_timeout = 10s
; 访问文件日志
; access.log = var/log/$pool.access.log

; 当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中. 设置为 '0' 表示 'Off'
; request_slowlog_timeout = 10s
; slowlog = log/$pool.lo

; DDtrace的环境配置
env[DD_AGENT_HOST]=${ENV[DD_AGENT_HOST]}
env[DD_TRACE_AGENT_PORT]=${ENV[DD_TRACE_AGENT_PORT]}
env[DD_SERVICE]=${ENV[DD_SERVICE]}
env[DD_ENV]=${ENV[DD_ENV]}
env[DD_VERSION]=${ENV[DD_VERSION]}